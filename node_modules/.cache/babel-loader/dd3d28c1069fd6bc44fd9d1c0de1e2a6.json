{"ast":null,"code":"import _classCallCheck from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/masha/Desktop/kanban/src/components/List.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\nimport NewCardForm from '../nestedComponents/NewCardForm';\nimport NewCard from '../nestedComponents/NewCard';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n\n    _this.updateInputValue = function (e) {\n      var updatedValue = e.target.value;\n\n      _this.setState({\n        inputValue: updatedValue,\n        submitted: true\n      });\n    };\n\n    _this.deleteCardHandler = function (cardID) {\n      var cards = _this.props.cards;\n      var cardToDelete = cards.indexOf(cardID);\n      cards.splice(cardToDelete, 1);\n\n      _this.setState({\n        cards: cards,\n        addNewClicked: false\n      });\n    };\n\n    _this.clickedBtn = function () {\n      _this.setState({\n        isHidden: !_this.state.isHidden\n      });\n    };\n\n    _this.state = {\n      inputValue: \"\",\n      submitted: false,\n      addNewClicked: false,\n      isHidden: true\n    };\n    _this.updateInputValue = _this.updateInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteCardHandler = _this.deleteCardHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clickedBtn = _this.clickedBtn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cards = this.props.cards.map(function (card) {\n        return React.createElement(Card, Object.assign({}, card, {\n          key: card.id,\n          deleteCard: function deleteCard() {\n            return _this2.deleteCardHandler(card.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }));\n      });\n      var newCardForm = this.state.addNewClicked ? React.createElement(NewCardForm, {\n        newCard: this.props.addNewCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }) : null;\n      return React.createElement(\"div\", {\n        className: \"List\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"List__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.title), cards, newCardForm, !this.state.addNewClicked ? React.createElement(\"button\", {\n        type: \"button\",\n        className: \"List__newCard--btn btn\",\n        onClick: this.clickedBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Add new card\") : null);\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/masha/Desktop/kanban/src/components/List.js"],"names":["React","Component","Card","NewCardForm","NewCard","List","updateInputValue","e","updatedValue","target","value","setState","inputValue","submitted","deleteCardHandler","cardID","cards","props","cardToDelete","indexOf","splice","addNewClicked","clickedBtn","isHidden","state","bind","map","card","id","newCardForm","addNewCard","title"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;IAEqBC,I;;;;;AACjB,kBAAc;AAAA;;AAAA;;AACV;;AADU,UAedC,gBAfc,GAeK,UAACC,CAAD,EAAO;AAClB,UAAIC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA5B;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAEJ,YAAb;AAA2BK,QAAAA,SAAS,EAAE;AAAtC,OAAd;AACP,KAlBa;;AAAA,UAoBdC,iBApBc,GAoBM,UAACC,MAAD,EAAY;AAC5B,UAAIC,KAAK,GAAG,MAAKC,KAAL,CAAWD,KAAvB;AACA,UAAIE,YAAY,GAAGF,KAAK,CAACG,OAAN,CAAcJ,MAAd,CAAnB;AACAC,MAAAA,KAAK,CAACI,MAAN,CAAaF,YAAb,EAA2B,CAA3B;;AACA,YAAKP,QAAL,CAAc;AAACK,QAAAA,KAAK,EAAEA,KAAR;AAAeK,QAAAA,aAAa,EAAE;AAA9B,OAAd;AACH,KAzBa;;AAAA,UA2BdC,UA3Bc,GA2BD,YAAM;AACf,YAAKX,QAAL,CAAc;AAACY,QAAAA,QAAQ,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAAvB,OAAd;AACH,KA7Ba;;AAGV,UAAKC,KAAL,GAAa;AACTZ,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,SAAS,EAAE,KAFF;AAGTQ,MAAAA,aAAa,EAAE,KAHN;AAITE,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAOA,UAAKjB,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBmB,IAAtB,uDAAxB;AACA,UAAKX,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBW,IAAvB,uDAAzB;AACA,UAAKH,UAAL,GAAkB,MAAKA,UAAL,CAAgBG,IAAhB,uDAAlB;AAZU;AAab;;;;6BAkBQ;AAAA;;AACL,UAAIT,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBU,GAAjB,CAAqB,UAACC,IAAD,EAAU;AACvC,eACI,oBAAC,IAAD,oBAAWA,IAAX;AACI,UAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,UAAA,UAAU,EAAE;AAAA,mBAAM,MAAI,CAACd,iBAAL,CAAuBa,IAAI,CAACC,EAA5B,CAAN;AAAA,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,OANW,CAAZ;AAQA,UAAIC,WAAW,GAAG,KAAKL,KAAL,CAAWH,aAAX,GAA2B,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWa,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,GAA4E,IAA9F;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKb,KAAL,CAAWc,KAAxC,CADJ,EAEKf,KAFL,EAIKa,WAJL,EAKK,CAAC,KAAKL,KAAL,CAAWH,aAAZ,GACG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AACI,QAAA,OAAO,EAAE,KAAKC,UADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,GAEyD,IAP9D,CADJ;AAWH;;;;EAtD6BrB,S;;SAAbI,I","sourcesContent":["import React, { Component } from 'react';\n\nimport Card from './Card';\nimport NewCardForm from '../nestedComponents/NewCardForm';\nimport NewCard from '../nestedComponents/NewCard';\n\nexport default class List extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            inputValue: \"\",\n            submitted: false,\n            addNewClicked: false,\n            isHidden: true,\n        };\n\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.deleteCardHandler = this.deleteCardHandler.bind(this);\n        this.clickedBtn = this.clickedBtn.bind(this);\n    };\n\n    updateInputValue = (e) => {\n            let updatedValue = e.target.value;\n            this.setState({inputValue: updatedValue, submitted: true});\n    };\n\n    deleteCardHandler = (cardID) => {\n        let cards = this.props.cards;\n        let cardToDelete = cards.indexOf(cardID);\n        cards.splice(cardToDelete, 1);\n        this.setState({cards: cards, addNewClicked: false});\n    };\n\n    clickedBtn = () => {\n        this.setState({isHidden: !this.state.isHidden});\n    };\n\n    render() {\n        let cards = this.props.cards.map((card) => {\n            return ( \n                <Card  {...card} \n                    key={card.id} \n                    deleteCard={() => this.deleteCardHandler(card.id)} />\n            ) \n        });\n\n        let newCardForm = this.state.addNewClicked ? <NewCardForm newCard={this.props.addNewCard}/> : null;\n\n        return(\n            <div className=\"List\">\n                <h1 className=\"List__title\">{this.props.title}</h1>\n                {cards}\n                {/* <NewCard /> */}\n                {newCardForm}\n                {!this.state.addNewClicked  ?\n                    <button type=\"button\" className=\"List__newCard--btn btn\"\n                        onClick={this.clickedBtn}>Add new card</button> : null}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}