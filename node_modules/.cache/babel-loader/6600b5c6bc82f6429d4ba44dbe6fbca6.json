{"ast":null,"code":"import _classCallCheck from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/masha/Desktop/kanban/src/components/KanbanBoardContainer.js\";\nimport React, { Component } from 'react';\nimport KanbanBoard from './KanbanBoard';\n\nvar KanbanBoardContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(KanbanBoardContainer, _Component);\n\n  function KanbanBoardContainer() {\n    var _this;\n\n    _classCallCheck(this, KanbanBoardContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(KanbanBoardContainer).apply(this, arguments));\n    _this.state = {\n      cards: [] // this.addNewCardHandler = this.addNewCardHandler.bind(this);\n\n    };\n    return _this;\n  } // addNewCardHandler = (cards) => {\n  //     let cardIndex = cards.findIndex((card)=>card.id === cards.id);\n  //     let card = cardIndex[cards];\n  //     cards.splice(cardIndex, 0, card);\n  //     console.log(cards);\n  // }\n\n\n  _createClass(KanbanBoardContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(KanbanBoard, {\n        cards: this.props.cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return KanbanBoardContainer;\n}(Component);\n\nexport { KanbanBoardContainer as default };","map":{"version":3,"sources":["/Users/masha/Desktop/kanban/src/components/KanbanBoardContainer.js"],"names":["React","Component","KanbanBoard","KanbanBoardContainer","arguments","state","cards","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;IAEqBC,oB;;;;;AACjB,kCAAc;AAAA;;AAAA;;AACV,+FAASC,SAAT;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE,CAIb;;AAJa,KAAb;AAHU;AAQb,G,CAED;AACA;AACA;AACA;AACA;AACA;;;;;6BAES;AACL,aACI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EAtB6CL,S;;SAA7BE,oB","sourcesContent":["import React, { Component } from 'react';\n\nimport KanbanBoard from './KanbanBoard';\n\nexport default class KanbanBoardContainer extends Component {\n    constructor() {\n        super(...arguments);\n\n        this.state = {\n            cards: [],\n        }\n\n        // this.addNewCardHandler = this.addNewCardHandler.bind(this);\n    }\n\n    // addNewCardHandler = (cards) => {\n    //     let cardIndex = cards.findIndex((card)=>card.id === cards.id);\n    //     let card = cardIndex[cards];\n    //     cards.splice(cardIndex, 0, card);\n    //     console.log(cards);\n    // }\n\n    render() {\n        return(\n            <KanbanBoard cards={this.props.cards} />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}