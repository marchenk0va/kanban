{"ast":null,"code":"import _classCallCheck from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/masha/Desktop/kanban/src/components/List.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n\n    _this.updateInputValue = function (e) {\n      var updatedValue = e.target.value;\n\n      _this.setState({\n        inputValue: updatedValue,\n        submitted: true\n      });\n\n      console.log(_this.state.inputValue);\n    };\n\n    _this.addNewCardHandler = function (e, newCardTitle) {\n      var newCard = _this.props.cards.concat(newCardTitle);\n\n      console.log(newCard);\n\n      if (_this.state.submitted) {\n        _this.setState({\n          cards: newCard\n        });\n      }\n    };\n\n    _this.deleteCardHandler = function (cardID) {\n      var cardToDelete = _this.props.cards.indexOf(cardID);\n\n      _this.props.cards.splice(cardToDelete, 1);\n\n      _this.setState({\n        cards: cards\n      });\n    };\n\n    _this.state = {\n      inputValue: \"\",\n      submitted: false,\n      cards: []\n    };\n    _this.updateInputValue = _this.updateInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteCardHandler = _this.deleteCardHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addNewCardHandler = _this.addNewCardHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cards = this.props.cards.map(function (card) {\n        return React.createElement(Card, Object.assign({}, card, {\n          key: card.id,\n          deleteCard: function deleteCard() {\n            return _this2.deleteCardHandler(card.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"List\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"List__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.title), cards, React.createElement(\"form\", {\n        className: \"List__form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.addNewCardHandler(e, _this2.state.inputValue);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.inputValue,\n        placeholder: \"Add new task\",\n        onChange: function onChange(e) {\n          return _this2.updateInputValue(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"+\")));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/masha/Desktop/kanban/src/components/List.js"],"names":["React","Component","Card","List","updateInputValue","e","updatedValue","target","value","setState","inputValue","submitted","console","log","state","addNewCardHandler","newCardTitle","newCard","props","cards","concat","deleteCardHandler","cardID","cardToDelete","indexOf","splice","bind","map","card","id","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Card from './Card';\n\nexport default class List extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            inputValue: \"\",\n            submitted: false,\n            cards: [],\n        };\n\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.deleteCardHandler = this.deleteCardHandler.bind(this);\n        this.addNewCardHandler = this.addNewCardHandler.bind(this);\n    }\n\n    updateInputValue = (e) => {\n            let updatedValue = e.target.value;\n            this.setState({inputValue: updatedValue, submitted: true});\n            console.log(this.state.inputValue);\n    }\n\n    // addNewCardHandler = (e, cardID, cardTitle) => {\n    //     let cards = this.props.cards;\n    //     cards.concat(cardTitle)\n\n    //     this.setState\n    // }\n\n    addNewCardHandler = (e, newCardTitle) => {\n        let newCard = this.props.cards.concat(newCardTitle);\n        console.log(newCard);\n        if (this.state.submitted) {\n            this.setState({cards: newCard})\n        }\n    }\n\n    // addNewCardHandler(e, this.state.inputValue)\n\n    deleteCardHandler = (cardID) => {\n        let cardToDelete = this.props.cards.indexOf(cardID);\n        this.props.cards.splice(cardToDelete, 1);\n        this.setState({cards: cards});\n    }\n\n    render() {\n        let cards = this.props.cards.map((card) => {\n            return ( \n                <Card  \n                    {...card} \n                    key={card.id} \n                    deleteCard={() => this.deleteCardHandler(card.id)} />\n            )\n        });\n\n        return(\n            <div className=\"List\">\n                <h1 className=\"List__title\">{this.props.title}</h1>\n                {cards}\n                {/* <h1>{newCardTitle}</h1> */}\n                <form \n                    className=\"List__form\" \n                    onSubmit={(e) => this.addNewCardHandler(e, this.state.inputValue)}>\n                    <input \n                        type=\"text\" \n                        value={this.state.inputValue}\n                        placeholder=\"Add new task\"\n                        onChange={(e) => this.updateInputValue(e)} />\n                    <button type=\"submit\" className=\"btn\">+</button>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}