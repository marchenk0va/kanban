{"ast":null,"code":"import _classCallCheck from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/masha/Desktop/kanban/src/App.js\";\nimport React, { Component } from 'react';\nimport KanbanBoard from './components/KanbanBoard';\nimport Particles from 'react-particles-js';\nimport 'babel-polyfill';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var lists = {\n        cards: [{\n          id: 1,\n          cardTitle: 'Read',\n          description: 'Read something',\n          status: 'to-do',\n          level: 'low',\n          tasks: [{\n            id: 1,\n            taskTitle: 'The Norwegian wood',\n            done: true\n          }, {\n            id: 2,\n            taskTitle: 'JS Project',\n            done: false\n          }]\n        }, {\n          id: 2,\n          cardTitle: 'Not die',\n          description: 'Not die till the end of the project',\n          status: 'in-progress',\n          level: 'medium',\n          tasks: [{}]\n        }, {\n          id: 3,\n          cardTitle: 'Project',\n          description: 'Finish this fckng project',\n          status: 'completed',\n          level: 'high',\n          tasks: [{\n            id: 1,\n            taskTitle: 'React project',\n            done: true\n          }]\n        }]\n      };\n      var params = {\n        particles: {\n          // line_linked: {\n          //   shadow: {\n          //     enable: true,\n          //     color: \"#5DADE2\",\n          //     // blur: 7\n          //   }\n          // },\n          line_linked: {\n            color: \"#000000\"\n          },\n          number: {\n            value: 200 // density: {\n            //   enable: true,\n            //   value_area: 800\n            // }\n\n          }\n        }\n      };\n\n      addNewCardHandler = function addNewCardHandler(cardID) {\n        var cardIndex = lists.cards.findIndex(function (card) {\n          return card.id === cardID;\n        });\n        cards.append(cardIndex);\n\n        _this.setState({\n          cards: cards\n        });\n\n        console.log(cards);\n      };\n\n      return React.createElement(\"div\", {\n        className: \"KanbanBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(KanbanBoard, {\n        cards: lists.cards,\n        addCard: this.addNewCardHandler(lists.cards[id]).bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Particles, {\n        className: \"App\",\n        params: params,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/masha/Desktop/kanban/src/App.js"],"names":["React","Component","KanbanBoard","Particles","App","lists","cards","id","cardTitle","description","status","level","tasks","taskTitle","done","params","particles","line_linked","color","number","value","addNewCardHandler","cardID","cardIndex","findIndex","card","append","setState","console","log","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,gBAAP;;IAGMC,G;;;;;;;;;;;;;6BACK;AAAA;;AACP,UAAIC,KAAK,GAAG;AACVC,QAAAA,KAAK,EAAE,CACL;AACAC,UAAAA,EAAE,EAAE,CADJ;AAEAC,UAAAA,SAAS,EAAE,MAFX;AAGAC,UAAAA,WAAW,EAAE,gBAHb;AAIAC,UAAAA,MAAM,EAAE,OAJR;AAKAC,UAAAA,KAAK,EAAE,KALP;AAMAC,UAAAA,KAAK,EAAE,CACL;AACEL,YAAAA,EAAE,EAAE,CADN;AAEEM,YAAAA,SAAS,EAAE,oBAFb;AAGEC,YAAAA,IAAI,EAAE;AAHR,WADK,EAML;AACEP,YAAAA,EAAE,EAAE,CADN;AAEEM,YAAAA,SAAS,EAAE,YAFb;AAGEC,YAAAA,IAAI,EAAE;AAHR,WANK;AANP,SADK,EAoBP;AACEP,UAAAA,EAAE,EAAE,CADN;AAEEC,UAAAA,SAAS,EAAE,SAFb;AAGEC,UAAAA,WAAW,EAAE,qCAHf;AAIEC,UAAAA,MAAM,EAAE,aAJV;AAKEC,UAAAA,KAAK,EAAE,QALT;AAMEC,UAAAA,KAAK,EAAE,CAAC,EAAD;AANT,SApBO,EA4BP;AACEL,UAAAA,EAAE,EAAE,CADN;AAEEC,UAAAA,SAAS,EAAE,SAFb;AAGEC,UAAAA,WAAW,EAAE,2BAHf;AAIEC,UAAAA,MAAM,EAAE,WAJV;AAKEC,UAAAA,KAAK,EAAE,MALT;AAMEC,UAAAA,KAAK,EAAE,CACL;AACEL,YAAAA,EAAE,EAAE,CADN;AAEEM,YAAAA,SAAS,EAAE,eAFb;AAGEC,YAAAA,IAAI,EAAE;AAHR,WADK;AANT,SA5BO;AADG,OAAZ;AA8CA,UAAMC,MAAM,GAAG;AACbC,QAAAA,SAAS,EAAE;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,UAAAA,WAAW,EAAE;AACXC,YAAAA,KAAK,EAAE;AADI,WARJ;AAWTC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,GADD,CAEN;AACA;AACA;AACA;;AALM;AAXC;AADE,OAAf;;AAsBAC,MAAAA,iBAAiB,GAAG,2BAACC,MAAD,EAAY;AAC9B,YAAIC,SAAS,GAAGlB,KAAK,CAACC,KAAN,CAAYkB,SAAZ,CAAsB,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAAClB,EAAL,KAAYe,MAAtB;AAAA,SAAtB,CAAhB;AACIhB,QAAAA,KAAK,CAACoB,MAAN,CAAaH,SAAb;;AACA,QAAA,KAAI,CAACI,QAAL,CAAc;AAACrB,UAAAA,KAAK,EAAEA;AAAR,SAAd;;AACAsB,QAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;AACL,OALD;;AAOA,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAED,KAAK,CAACC,KAA1B;AAAiC,QAAA,OAAO,EAAE,KAAKe,iBAAL,CAAuBhB,KAAK,CAACC,KAAN,CAAYC,EAAZ,CAAvB,EAAwCuB,IAAxC,CAA6C,IAA7C,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,KAArB;AAA2B,QAAA,MAAM,EAAEf,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAnFed,S;;AAsFlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport KanbanBoard from './components/KanbanBoard';\nimport Particles from 'react-particles-js';\nimport 'babel-polyfill';\n\n\nclass App extends Component {\n  render() {\n    let lists = { \n      cards: [\n        {\n        id: 1,\n        cardTitle: 'Read',\n        description: 'Read something',\n        status: 'to-do',\n        level: 'low',\n        tasks: [\n          {\n            id: 1,\n            taskTitle: 'The Norwegian wood',\n            done: true\n          },\n          {\n            id: 2,\n            taskTitle: 'JS Project',\n            done: false\n          }\n        ]\n      },\n      {\n        id: 2,\n        cardTitle: 'Not die',\n        description: 'Not die till the end of the project',\n        status: 'in-progress',\n        level: 'medium',\n        tasks: [{}]\n      },\n      {\n        id: 3,\n        cardTitle: 'Project',\n        description: 'Finish this fckng project',\n        status: 'completed',\n        level: 'high',\n        tasks: [\n          {\n            id: 1,\n            taskTitle: 'React project',\n            done: true\n          }\n        ]\n      }\n      ]\n    }\n\n    const params = {\n      particles: {\n        // line_linked: {\n        //   shadow: {\n        //     enable: true,\n        //     color: \"#5DADE2\",\n        //     // blur: 7\n        //   }\n        // },\n        line_linked: {\n          color: \"#000000\",\n        },\n        number: {\n          value: 200,\n          // density: {\n          //   enable: true,\n          //   value_area: 800\n          // }\n        }\n      }\n    }\n\n    addNewCardHandler = (cardID) => {\n      let cardIndex = lists.cards.findIndex((card) => card.id === cardID);\n          cards.append(cardIndex);\n          this.setState({cards: cards});\n          console.log(cards);\n    }\n\n    return (\n      <div className=\"KanbanBoard\">\n        <KanbanBoard cards={lists.cards} addCard={this.addNewCardHandler(lists.cards[id]).bind(this)}/>\n        <Particles className=\"App\" params={params} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}