{"ast":null,"code":"import _classCallCheck from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/masha/Desktop/kanban/src/components/List.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\nimport NewCardForm from '../nestedComponents/NewCardForm';\nimport NewCard from '../nestedComponents/NewCard';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n\n    _this.updateInputValue = function (e) {\n      var updatedValue = e.target.value;\n\n      _this.setState({\n        inputValue: updatedValue,\n        submitted: true\n      });\n\n      console.log(_this.state.inputValue);\n    };\n\n    _this.deleteCardHandler = function (cardID) {\n      var cards = _this.props.cards;\n      var cardToDelete = cards.indexOf(cardID);\n      cards.splice(cardToDelete, 1);\n\n      _this.setState({\n        cards: cards,\n        addNewClicked: false\n      });\n    };\n\n    _this.addNewCard = function () {\n      var cards = _this.props.cards;\n      var oldCard = cards.indexOf(cards) + 1;\n\n      _this.setState({\n        cards: oldCard\n      });\n\n      console.log(oldCard);\n    };\n\n    _this.clickedBtn = function () {\n      _this.setState({\n        addNewClicked: true\n      });\n    };\n\n    _this.add = function () {\n      console.log(React.createElement(NewCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    };\n\n    _this.addCARDPLEASE = function (cardStatus) {\n      var cards = _this.props.cards;\n      var oldCard = cards.length;\n      var newCard = oldCard + 1;\n      console.log(cardStatus);\n\n      if (cardStatus === \"to-do\") {\n        console.log(newCard);\n      } else {\n        // cardToAdd = cardToAdd[cardID] + 1;\n        _this.setState({\n          cards: newCard\n        });\n\n        console.log(newCard);\n      }\n    };\n\n    _this.state = {\n      inputValue: \"\",\n      submitted: false,\n      cards: [],\n      addNewClicked: false\n    };\n    _this.updateInputValue = _this.updateInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteCardHandler = _this.deleteCardHandler.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.addNewCardHandler = this.addNewCardHandler.bind(this);\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cards = this.props.cards.map(function (card) {\n        return React.createElement(Card, Object.assign({}, card, {\n          key: card.id,\n          deleteCard: function deleteCard() {\n            return _this2.deleteCardHandler(card.id);\n          },\n          addCard: function addCard() {\n            return _this2.addCARDPLEASE(_this2.props.cards).bind(_this2);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }));\n      });\n\n      if (this.addNewClicked) {}\n\n      var newCardForm = this.state.addNewClicked ? React.createElement(NewCardForm, {\n        newCard: this.add.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }) : null;\n      return React.createElement(\"div\", {\n        className: \"List\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"List__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.title), cards, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"List__newCard--btn btn\",\n        onClick: this.addNewCard.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Add new card\"), newCardForm, React.createElement(\"button\", {\n        onClick: this.addCARDPLEASE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"addddd\"));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/masha/Desktop/kanban/src/components/List.js"],"names":["React","Component","Card","NewCardForm","NewCard","List","updateInputValue","e","updatedValue","target","value","setState","inputValue","submitted","console","log","state","deleteCardHandler","cardID","cards","props","cardToDelete","indexOf","splice","addNewClicked","addNewCard","oldCard","clickedBtn","add","addCARDPLEASE","cardStatus","length","newCard","bind","map","card","id","newCardForm","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Card from './Card';\nimport NewCardForm from '../nestedComponents/NewCardForm';\nimport NewCard from '../nestedComponents/NewCard';\n\nexport default class List extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            inputValue: \"\",\n            submitted: false,\n            cards: [],\n            addNewClicked: false,\n        };\n\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.deleteCardHandler = this.deleteCardHandler.bind(this);\n        // this.addNewCardHandler = this.addNewCardHandler.bind(this);\n        \n    }\n\n    updateInputValue = (e) => {\n            let updatedValue = e.target.value;\n            this.setState({inputValue: updatedValue, submitted: true});\n            console.log(this.state.inputValue);\n    }\n\n    ////////////\n    // addNewCardHandler = (e) => {\n    //     this.setState((prevState) => ({\n    //         cards: [...prevState.cards]\n    //     }));\n    //     console.log(prevState);\n    // }\n    ////////////////\n\n    deleteCardHandler = (cardID) => {\n        let cards = this.props.cards;\n        let cardToDelete = cards.indexOf(cardID);\n        cards.splice(cardToDelete, 1);\n        this.setState({cards: cards, addNewClicked: false});\n    }\n\n    addNewCard = () => {\n        let cards = this.props.cards;\n        let oldCard = cards.indexOf(cards) + 1;\n        this.setState({cards: oldCard});\n        console.log(oldCard);\n    }\n\n    clickedBtn = () => {\n        this.setState({addNewClicked: true});\n    }\n\n    add = () => {\n        console.log(<NewCard />)\n    }\n\n    // PUTS +1 UNDER OLD CARD\n\n    addCARDPLEASE = (cardStatus) => {\n        let cards = this.props.cards;\n        let oldCard = cards.length;\n        let newCard = oldCard + 1;\n        console.log(cardStatus);\n        if (cardStatus === \"to-do\") {\n            console.log(newCard)\n        } else {\n            // cardToAdd = cardToAdd[cardID] + 1;\n            this.setState({cards: newCard});\n            console.log(newCard);\n        }\n    }\n\n    render() {\n        let cards = this.props.cards.map((card) => {\n            return ( \n                <Card  {...card} \n                    key={card.id} \n                    deleteCard={() => this.deleteCardHandler(card.id)}\n                    addCard={() => this.addCARDPLEASE(this.props.cards).bind(this)} />\n            ) \n        });\n\n        if (this.addNewClicked) {\n\n        }\n\n        let newCardForm = this.state.addNewClicked ? <NewCardForm newCard={this.add.bind(this)}/> : null;\n\n        return(\n            <div className=\"List\">\n                <h1 className=\"List__title\">{this.props.title}</h1>\n                {cards}\n                <button \n                    type=\"button\" \n                    className=\"List__newCard--btn btn\"\n                    onClick={this.addNewCard.bind(this)}>Add new card</button>\n                {newCardForm}\n                <button onClick={this.addCARDPLEASE}>addddd</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}