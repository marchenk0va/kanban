{"ast":null,"code":"import _classCallCheck from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/masha/Desktop/kanban/src/components/List.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n    _this.state = {\n      inputValue: ''\n    };\n    _this.updateInputValue = _this.updateInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addNewTaskHandler = _this.addNewTaskHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"updateInputValue\",\n    value: function updateInputValue(e) {\n      var updatedValue = e.target.value;\n      this.setState({\n        inputValue: updatedValue\n      });\n      console.log(updatedValue);\n    }\n  }, {\n    key: \"addNewTaskHandler\",\n    value: function addNewTaskHandler(e) {\n      var inputValue = this.state.inputValue;\n\n      if (inputValue !== '') {\n        console.log('works'); // return new card with title\n      } else return console.log('also works'); // <Card {taskTitle} />\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cards = this.props.cards.map(function (card) {\n        return React.createElement(Card, Object.assign({}, card, {\n          key: card.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })) // <Card id={card.id} \n        //     key={card.id}\n        //     cardTitle={card.cardTitle}\n        //     description={card.description}\n        //     status={card.status}\n        //     level={card.level}\n        //     tasks={card.taskTitle} /> \n        ;\n      });\n      return React.createElement(\"div\", {\n        className: \"List\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"List__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.title), cards, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.inputValue,\n        placeholder: \"Enter new task\",\n        onChange: this.updateInputValue,\n        onSubmit: function onSubmit(e) {\n          return _this2.addNewTaskHandler(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        onClick: function onClick(e) {\n          return _this2.addNewTaskHandler(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"+\")));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/masha/Desktop/kanban/src/components/List.js"],"names":["React","Component","Card","List","state","inputValue","updateInputValue","bind","addNewTaskHandler","e","updatedValue","target","value","setState","console","log","cards","props","map","card","id","title"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;IAEqBC,I;;;;;AACjB,kBAAc;AAAA;;AAAA;;AACV;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAIA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,uDAAxB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,uDAAzB;AARU;AASb;;;;qCAEgBE,C,EAAI;AACjB,UAAIC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA5B;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,UAAU,EAAEK;AAAb,OAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACH;;;sCAEiBD,C,EAAI;AAClB,UAAIJ,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;;AACA,UAAGA,UAAU,KAAK,EAAlB,EAAsB;AAClBS,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADkB,CAElB;AACH,OAHD,MAGO,OAAOD,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAP,CALW,CAMlB;;AACH;;;6BAEQ;AAAA;;AACL,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,GAAjB,CAAqB,UAACC,IAAD,EAAU;AACvC,eAAS,oBAAC,IAAD,oBAAWA,IAAX;AAAiB,UAAA,GAAG,EAAEA,IAAI,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAT,CACI;AACA;AACA;AACA;AACA;AACA;AACA;AAPJ;AASH,OAVW,CAAZ;AAYA,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKH,KAAL,CAAWI,KAAxC,CADJ,EAEKL,KAFL,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,UAFtB;AAGI,QAAA,WAAW,EAAC,gBAHhB;AAII,QAAA,QAAQ,EAAE,KAAKC,gBAJnB;AAKI,QAAA,QAAQ,EAAE,kBAACG,CAAD;AAAA,iBAAO,MAAI,CAACD,iBAAL,CAAuBC,CAAvB,CAAP;AAAA,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAOA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,KAAhC;AAAqC,QAAA,OAAO,EAAE,iBAACA,CAAD;AAAA,iBAAO,MAAI,CAACD,iBAAL,CAAuBC,CAAvB,CAAP;AAAA,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPA,CAHJ,CADJ;AAeH;;;;EAvD6BR,S;;SAAbE,I","sourcesContent":["import React, { Component } from 'react';\n\nimport Card from './Card';\n\nexport default class List extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            inputValue: '',\n        };\n\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.addNewTaskHandler = this.addNewTaskHandler.bind(this);\n    }\n\n    updateInputValue(e)  {\n        let updatedValue = e.target.value;\n        this.setState({inputValue: updatedValue});\n        console.log(updatedValue);\n    }\n\n    addNewTaskHandler(e)  {\n        let inputValue = this.state.inputValue;\n        if(inputValue !== '') {\n            console.log('works')\n            // return new card with title\n        } else return console.log('also works')\n        // <Card {taskTitle} />\n    }\n\n    render() {\n        let cards = this.props.cards.map((card) => {\n            return ( <Card  {...card} key={card.id}/>\n                // <Card id={card.id} \n                //     key={card.id}\n                //     cardTitle={card.cardTitle}\n                //     description={card.description}\n                //     status={card.status}\n                //     level={card.level}\n                //     tasks={card.taskTitle} /> \n            )\n        });\n\n        return(\n            <div className=\"List\">\n                <h1 className=\"List__title\">{this.props.title}</h1>\n                {cards}\n                <form>\n                <input \n                    type=\"text\" \n                    value={this.state.inputValue}\n                    placeholder=\"Enter new task\" \n                    onChange={this.updateInputValue}\n                    onSubmit={(e) => this.addNewTaskHandler(e)} />\n                <button type=\"submit\" className=\"btn\"onClick={(e) => this.addNewTaskHandler(e)}>+</button>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}