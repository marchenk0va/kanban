{"ast":null,"code":"import _classCallCheck from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/masha/Desktop/kanban/src/components/List.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\nimport NewCardForm from '../nestedComponents/NewCardForm';\nimport NewCard from '../nestedComponents/NewCard';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n\n    _this.updateInputValue = function (e) {\n      var updatedValue = e.target.value;\n\n      _this.setState({\n        inputValue: updatedValue,\n        submitted: true\n      });\n\n      console.log(_this.state.inputValue);\n    };\n\n    _this.deleteCardHandler = function (cardID) {\n      var cards = _this.props.cards;\n      var cardToDelete = cards.indexOf(cardID);\n      cards.splice(cardToDelete, 1);\n\n      _this.setState({\n        cards: cards,\n        addNewClicked: false\n      });\n    };\n\n    _this.clickedBtn = function () {\n      _this.setState({\n        addNewClicked: true\n      });\n    };\n\n    _this.addNewCard = function () {};\n\n    _this.state = {\n      inputValue: \"\",\n      submitted: false,\n      cards: [],\n      addNewClicked: false,\n      check: function check() {\n        console.log('CHECK');\n      }\n    };\n    _this.updateInputValue = _this.updateInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteCardHandler = _this.deleteCardHandler.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.addNewCardHandler = this.addNewCardHandler.bind(this);\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cards = this.props.cards.map(function (card) {\n        return React.createElement(Card, Object.assign({}, card, {\n          key: card.id,\n          deleteCard: function deleteCard() {\n            return _this2.deleteCardHandler(card.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }));\n      });\n      var newCardForm = this.state.addNewClicked ? React.createElement(NewCardForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }) : null;\n      var addNewCard = this.addNewCard.bind(this);\n      return React.createElement(\"div\", {\n        className: \"List\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"List__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.title), cards, newCard = this.state.addNewClicked, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"List__newCard--btn btn\",\n        onClick: this.clickedBtn.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Add new card\"), newCardForm);\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport { List as default };","map":{"version":3,"sources":["/Users/masha/Desktop/kanban/src/components/List.js"],"names":["React","Component","Card","NewCardForm","NewCard","List","updateInputValue","e","updatedValue","target","value","setState","inputValue","submitted","console","log","state","deleteCardHandler","cardID","cards","props","cardToDelete","indexOf","splice","addNewClicked","clickedBtn","addNewCard","check","bind","map","card","id","newCardForm","title","newCard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Card from './Card';\nimport NewCardForm from '../nestedComponents/NewCardForm';\nimport NewCard from '../nestedComponents/NewCard';\n\nexport default class List extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            inputValue: \"\",\n            submitted: false,\n            cards: [],\n            addNewClicked: false,\n            check: () => {\n                console.log('CHECK')\n            }\n        };\n\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.deleteCardHandler = this.deleteCardHandler.bind(this);\n        // this.addNewCardHandler = this.addNewCardHandler.bind(this);\n        \n    }\n\n    updateInputValue = (e) => {\n            let updatedValue = e.target.value;\n            this.setState({inputValue: updatedValue, submitted: true});\n            console.log(this.state.inputValue);\n    }\n\n    ////////////\n    // addNewCardHandler = (e) => {\n    //     this.setState((prevState) => ({\n    //         cards: [...prevState.cards]\n    //     }));\n    //     console.log(prevState);\n    // }\n    ////////////////\n\n    deleteCardHandler = (cardID) => {\n        let cards = this.props.cards;\n        let cardToDelete = cards.indexOf(cardID);\n        cards.splice(cardToDelete, 1);\n        this.setState({cards: cards, addNewClicked: false});\n    }\n\n    clickedBtn = () => {\n        this.setState({addNewClicked: true});\n    }\n\n    addNewCard = () => {\n\n    }\n\n    render() {\n        let cards = this.props.cards.map((card) => {\n            return ( \n                <Card  {...card} \n                    key={card.id} \n                    deleteCard={() => this.deleteCardHandler(card.id)} />\n            ) \n        });\n\n        let newCardForm = this.state.addNewClicked ? <NewCardForm /> : null;\n        let addNewCard = this.addNewCard.bind(this);\n\n        return(\n            <div className=\"List\">\n                <h1 className=\"List__title\">{this.props.title}</h1>\n                {cards}\n                {newCard=this.state.addNewClicked}\n                <button \n                    type=\"button\" \n                    className=\"List__newCard--btn btn\"\n                    onClick={this.clickedBtn.bind(this)}>Add new card</button>\n                {newCardForm}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}