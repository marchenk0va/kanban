{"ast":null,"code":"import _classCallCheck from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/masha/Desktop/kanban/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/masha/Desktop/kanban/src/nestedComponents/NewCardForm.js\";\nimport React, { Component } from 'react';\nimport NewTaskList from './NewTaskList';\n\nvar NewCardForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewCardForm, _Component);\n\n  function NewCardForm() {\n    var _this;\n\n    _classCallCheck(this, NewCardForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewCardForm).call(this));\n\n    _this.updateInputValue = function (e) {\n      var updatedInput = e.target.value;\n\n      _this.setState({\n        inputValue: updatedInput\n      });\n    };\n\n    _this.cancelAdding = function (e) {\n      return false;\n    };\n\n    _this.state = {\n      inputValue: \"\"\n    };\n    _this.updateInputValue = _this.updateInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewCardForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"NewCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Card Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.inputValue,\n        placeholder: \"...\",\n        className: \"NewCard__title\",\n        onChange: function onChange(e) {\n          return _this2.updateInputValue(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"card-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Card Description\"), React.createElement(\"textarea\", {\n        placeholder: \"...\",\n        className: \"NewCard__description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(NewTaskList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"task-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Here you can add list of task to your card :\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"NewCard__btn add btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"a\", {\n        href: \"/#\",\n        className: \"NewCard__btn cancel\",\n        onClick: this.props.addNewClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"cancel\")));\n    }\n  }]);\n\n  return NewCardForm;\n}(Component);\n\nexport { NewCardForm as default };","map":{"version":3,"sources":["/Users/masha/Desktop/kanban/src/nestedComponents/NewCardForm.js"],"names":["React","Component","NewTaskList","NewCardForm","updateInputValue","e","updatedInput","target","value","setState","inputValue","cancelAdding","state","bind","props","addNewClicked"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;IAEqBC,W;;;;;AACjB,yBAAc;AAAA;;AAAA;;AACV;;AADU,UAUdC,gBAVc,GAUK,UAACC,CAAD,EAAO;AACtB,UAAIC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA5B;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAEJ;AAAb,OAAd;AACH,KAba;;AAAA,UAedK,YAfc,GAeC,UAACN,CAAD,EAAO;AAClB,aAAO,KAAP;AACH,KAjBa;;AAGV,UAAKO,KAAL,GAAa;AACTF,MAAAA,UAAU,EAAE;AADH,KAAb;AAIA,UAAKN,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBS,IAAtB,uDAAxB;AAPU;AAQb;;;;6BAWQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWF,UAFtB;AAGI,QAAA,WAAW,EAAC,KAHhB;AAII,QAAA,SAAS,EAAC,gBAJd;AAKI,QAAA,QAAQ,EAAE,kBAACL,CAAD;AAAA,iBAAO,MAAI,CAACD,gBAAL,CAAsBC,CAAtB,CAAP;AAAA,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI;AAAO,QAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARJ,EASI;AACI,QAAA,WAAW,EAAC,KADhB;AAEI,QAAA,SAAS,EAAC,sBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAYI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,EAaI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAbJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,sBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII;AACI,QAAA,IAAI,EAAC,IADT;AAEI,QAAA,SAAS,EAAC,qBAFd;AAGI,QAAA,OAAO,EAAE,KAAKS,KAAL,CAAWC,aAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CAdJ,CADJ;AA0BH;;;;EA/CoCd,S;;SAApBE,W","sourcesContent":["import React, { Component } from 'react';\n\nimport NewTaskList from './NewTaskList';\n\nexport default class NewCardForm extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            inputValue: \"\",\n        }\n\n        this.updateInputValue = this.updateInputValue.bind(this);\n    }\n\n    updateInputValue = (e) => {\n        let updatedInput = e.target.value;\n        this.setState({inputValue: updatedInput});\n    }\n\n    cancelAdding = (e) => {\n        return false;\n    }\n\n    render() {\n        return (\n            <div className=\"NewCard\">\n                <label htmlFor=\"card-title\">Card Title</label>\n                <input \n                    type=\"text\" \n                    value={this.state.inputValue}\n                    placeholder=\"...\" \n                    className=\"NewCard__title\"\n                    onChange={(e) => this.updateInputValue(e)} />\n                <label htmlFor=\"card-description\">Card Description</label>\n                <textarea \n                    placeholder=\"...\" \n                    className=\"NewCard__description\" />\n                <NewTaskList />\n                <label htmlFor=\"task-list\">Here you can add list of task to your card :</label>\n                <div>\n                    <button \n                        type=\"submit\"\n                        className=\"NewCard__btn add btn\">+</button>\n                    <a \n                        href=\"/#\"\n                        className=\"NewCard__btn cancel\"\n                        onClick={this.props.addNewClicked}>cancel</a>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}